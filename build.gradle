buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}

apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'codenarc'
apply plugin: 'project-report'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

group = 'com.nagternal'
version = '0.5.0'

repositories {
    mavenCentral()
}

dependencies {
    compile('org.codehaus.groovy:groovy-all:2.4.7')
    compile('org.spockframework:spock-core:1.0-groovy-2.4')
    compile('com.github.mifmif:generex:1.0.1')
}

asciidoctor {
    sourceDir 'src/docs'
    attributes 'source-highlighter': 'prettify',
            toc: 'left',
            icons: 'font',
            toclevels: 3,
            'releaseVersion': project.version
}

codenarc {
    configFile = file "${project.projectDir}/config/codenarc/codenarc.groovy"
}

codenarcTest {
    ignoreFailures = true
}

codenarcMain {
    maxPriority3Violations = 20
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jar {
    from "${projectDir}/LICENSE.txt"
}

task sourceJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
    from "${projectDir}/LICENSE.txt"
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc
}

task allDocs(type: Copy, dependsOn: [groovydoc, asciidoctor]) {
    from "$buildDir/docs/"
    into "$buildDir/asciidoc/html5/"
}

check {
    dependsOn jacocoTestReport
}

build {
    dependsOn sourceJar, javadocJar
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

bintray {
    user = project.properties.bintrayUser
    key = project.properties.bintrayApiKey

    configurations = ['archives']
    dryRun = false
    publish = true
    pkg {
        repo = 'nagternal'
        name = 'spock-genesis'
        desc = 'Mostly lazy data generators for property based testing using the Spock test framework'
        websiteUrl = 'https://github.com/Bijnagte/spock-genesis'
        issueTrackerUrl = 'https://github.com/Bijnagte/spock-genesis/issues'
        vcsUrl = 'https://github.com/Bijnagte/spock-genesis.git'
        licenses = ['MIT']
        labels = ['spock']
        publicDownloadNumbers = true
    }
}

githubPages {
    repoUri = 'https://github.com/Bijnagte/spock-genesis.git'
    deleteExistingFiles = true

    pages {
        from file('build/asciidoc/html5')
    }

    //https://github.com/ajoberstar/gradle-git/wiki/Travis-CI-Authentication
    credentials {
        username = System.getenv('GH_TOKEN')
        password = ''
    }
}
